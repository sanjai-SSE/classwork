#include <stdio.h>

#define MAX_SIZE 100

void sortArray(int arr[], int size) {
    int i, j, temp;
    for (i = 0; i < size - 1; i++) {
        for (j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

float calculateMedian(int arr[], int size) {
    sortArray(arr, size);

    if (size % 2 == 0) {
        return (arr[size / 2 - 1] + arr[size / 2]) / 2.0;
    } else {
        return arr[size / 2];
    }
}

float calculateMean(int arr[], int size) {
    int sum = 0;
    int i;
    for (i = 0; i < size; i++) {
        sum += arr[i];
    }

    return sum / (float)size;
}

int calculateMode(int arr[], int size) {
    int frequency[MAX_SIZE] = {0};
    int i, mode, maxFrequency;

    for (i = 0; i < size; i++) {
        frequency[arr[i]]++;
    }

    mode = arr[0];
    maxFrequency = frequency[arr[0]];
    for (i = 1; i < size; i++) {
        if (frequency[arr[i]] > maxFrequency) {
            mode = arr[i];
            maxFrequency = frequency[arr[i]];
        }
    }

    return mode;
}

int main() {
    int arr[] = {2, 5, 7, 4, 2, 9, 7, 3, 5, 5};
    int size = sizeof(arr) / sizeof(arr[0]);

    float median = calculateMedian(arr, size);
    float mean = calculateMean(arr, size);
    int mode = calculateMode(arr, size);

    printf("Median: %.2f\n", median);
    printf("Mean: %.2f\n", mean);
    printf("Mode: %d\n", mode);

    return 0;
}
